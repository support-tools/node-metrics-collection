---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.monitordaemonset.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "node-monitor.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "node-monitor.selectorLabels" . | nindent 6 }}
      {{- with .Values.monitordaemonset.nodeSelector }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "node-monitor.selectorLabels" . | nindent 8 }}
        {{- with .Values.monitordaemonset.nodeSelector }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "node-monitor.serviceAccountName" . }}
      serviceAccount: {{ include "node-monitor.serviceAccountName" . }}
      containers:
      - name: monitordaemonset
        image: {{ .Values.image.repository }}
        command:
          - "/bin/bash"
          - "-c"
          - "cd /metrics/ && bash /scripts/collect-monitor.sh && sleep infinity"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: output
          mountPath: /metrics  
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          privileged: true
      volumes:
      - name: scripts
        configMap:
          name: metrics-scripts
      - name: output
        hostPath:
          path: /var/log/monitor-collection
          type: DirectoryOrCreate
      {{- with .Values.monitordaemonset.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
